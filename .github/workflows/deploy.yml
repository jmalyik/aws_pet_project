name: Build and Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-north-1
      BUCKET_NAME: aws-pet-bucket
      TF_VAR_alpha_vantage_apikey: ${{ secrets.ALPHA_VANTAGE_APIKEY }}
      TF_LOG: DEBUG

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 11

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Build project with Maven
        run: mvn clean package

      - name: Download Private Key Secret Name artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudfront-private-key-secret-name

      - name: Download Key Group ID artifact
        uses: actions/download-artifact@v4
        with:
          name: cloudfront-key-group-id

      - name: Set CLOUDFRONT_KEY_GROUP_ID and PRIVATE_KEY_SECRET_NAME env vars
        run: |
          echo "CLOUDFRONT_KEY_GROUP_ID=$(cat CLOUDFRONT_KEY_GROUP_ID.txt)" >> $GITHUB_ENV
          echo "PRIVATE_KEY_SECRET_NAME=$(cat CLOUDFRONT_PRIVATE_KEY_SECRET_NAME.txt)" >> $GITHUB_ENV      

      - name: Download private key from AWS Secrets Manager
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          aws secretsmanager get-secret-value --secret-id "$PRIVATE_KEY_SECRET_NAME" --region "$AWS_REGION" --query SecretString --output text > private.pem

      - name: Terraform Init
        working-directory: terraform/deploy
        run: terraform init -input=false -upgrade

      - name: Terraform Format Check
        working-directory: terraform/deploy
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: terraform/deploy
        run: terraform validate

      - name: Terraform Plan
        working-directory: terraform/deploy
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform/deploy
        run: terraform apply -auto-approve -var="bucket_name=$BUCKET_NAME" -var="cloudfront_key_group_id=$CLOUDFRONT_KEY_GROUP_ID"

      # log CloudFront Distribution ID to be able to create a github secret out of it for the destroyall github workflow
      - name: Get CloudFront Distribution ID output from Terraform
        id: cloudfront_output
        working-directory: terraform/deploy
        run: |
          dist_id=$(terraform output -raw cloudfront_distribution_id)
          echo "cloudfront_distribution_id=$dist_id" >> "$GITHUB_OUTPUT"

      - name: Log CloudFront Distribution ID
        run: |
          echo "CloudFront Distribution ID: $CLOUDFRONT_DIST_ID"
        env:
          CLOUDFRONT_DIST_ID: ${{ steps.cloudfront_output.outputs.cloudfront_distribution_id }}

